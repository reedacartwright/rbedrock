[{"path":"https://reedacartwright.github.io/rbedrock/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Reed Cartwright. Author, maintainer. Rich FitzJohn. Contributor. Christian Stigen Larsen. Contributor. LevelDB Authors. Copyright holder.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cartwright R (2025). rbedrock: Analysis Manipulation Data Minecraft Bedrock Edition. R package version 0.4.0, https://reedacartwright.github.io/rbedrock/.","code":"@Manual{,   title = {rbedrock: Analysis and Manipulation of Data from Minecraft Bedrock Edition},   author = {Reed Cartwright},   year = {2025},   note = {R package version 0.4.0},   url = {https://reedacartwright.github.io/rbedrock/}, }"},{"path":"https://reedacartwright.github.io/rbedrock/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Analysis and Manipulation of Data from Minecraft Bedrock Edition","text":"rbedrock extension package R supports analysis management Minecraft (Bedrock Edition) worlds. includes Windows 10, Pocket Edition, XBox, PS4 versions game. include Minecraft: Java worlds. already using R, need install latest R optionally RStudio.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analysis and Manipulation of Data from Minecraft Bedrock Edition","text":"Windows Mac, install rbedrock source, need suitable development tools installed machine. includes CMake.","code":"# The easiest way to install rbedrock is from CRAN. install.packages(\"rbedrock\")  # Or the the development version from GitHub: # install.packages(\"remotes\") remotes::install_github(\"reedacartwright/rbedrock\")  # Install tidyverse (not needed, but useful) # install.packages(\"tidyverse\")"},{"path":[]},{"path":"https://reedacartwright.github.io/rbedrock/reference/ActorDigest.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write Actor Digest Data — ActorDigest","title":"Read and write Actor Digest Data — ActorDigest","text":"Actor digests store list entities chunk; however chunk data use prefix. key format actor digest data acdig:x:z:dimension. get_acdig_data() get_acdig_value() load ActorDigest data db.  get_acdig_value() supports loading single value. put_acdig_data() put_acdig_value() store ActorDigest data db. read_acdig_value() write_acdig_value() decode encode ActorDigest data respectively. create_acdig_keys() creates keys ActorDigest data.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/ActorDigest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write Actor Digest Data — ActorDigest","text":"","code":"get_acdig_data(x, z, dimension, db = default_db())  get_acdig_value(x, z, dimension, db = default_db())  put_acdig_data(values, x, z, dimension, db = default_db())  put_acdig_value(value, x, z, dimension, db = default_db())  read_acdig_value(rawvalue)  write_acdig_value(value)  create_acdig_keys(x, z, dimension)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/ActorDigest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write Actor Digest Data — ActorDigest","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. values list character vectors. x missing, names values taken keys. value character vector. rawvalue raw vector.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/ActorDigest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write Actor Digest Data — ActorDigest","text":"get_acdig_values() returns vector actor keys. get_acdig_data() returns named list values returned get_acdig_value().","code":""},{"path":[]},{"path":"https://reedacartwright.github.io/rbedrock/reference/Actors.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write Actor data — Actors","title":"Read and write Actor data — Actors","text":"1.18.30, nbt data actor saved independently database, using key prefix 16-character storage key: 'actor:0123456789abcdef'. keys actors chunk saved ActorDigest record, format acdig:x:z:dimension'.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Actors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write Actor data — Actors","text":"","code":"get_actors_data(x, z, dimension, db = default_db())  get_actors_value(x, z, dimension, db = default_db())  put_actors_data(values, x, z, dimension, db = default_db())  put_actors_value(value, x, z, dimension, db = default_db())"},{"path":"https://reedacartwright.github.io/rbedrock/reference/Actors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write Actor data — Actors","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. values list character vectors. x missing, names values taken keys. value list nbt actors data","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Actors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and write Actor data — Actors","text":"get_actors_value() loads Actors data single chunk db. get_actors_data() loads Actors data multiple chunks db. put_actors_value() put_actors_data() store one/multiple chunks Actors data db update chunks' ActorDigests. storing Actors data, actor's storage key recalculated actor's UniqueID. actor's position dimension verified chunk assigned .","code":""},{"path":[]},{"path":"https://reedacartwright.github.io/rbedrock/reference/Biomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write Biomes data — Biomes","title":"Read and write Biomes data — Biomes","text":"Biomes data stored second map Data3D data (tag 43).","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Biomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write Biomes data — Biomes","text":"","code":"get_biomes_value(x, z, dimension, db = default_db(), return_names = TRUE)  get_biomes_data(x, z, dimension, db = default_db(), return_names = TRUE)  put_biomes_value(   value,   x,   z,   dimension,   db = default_db(),   missing_height = 0L )  put_biomes_data(   values,   x,   z,   dimension,   db = default_db(),   missing_height = 0L )  biome_id(value)  biome_name(value)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/Biomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write Biomes data — Biomes","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. return_names return biome names instead biome ids. value array biome ids. missing_height existing height data, use value chunk. values (named) list Biomes data values. x missing, names values taken keys.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Biomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write Biomes data — Biomes","text":"get_biomes_value() returns Biomes data value. get_biomes_data() returns named list Biomes data values. Biomes data values 16x384x16 arrays containing biome data.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Biomes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and write Biomes data — Biomes","text":"get_biomes_value() get_biomes_data() load Biomes data db. get_biomes_value() loads data single chunk, get_biomes_data() loads data multiple chunks. put_biomes_value() put_biomes_data() store biomes data db.","code":""},{"path":[]},{"path":"https://reedacartwright.github.io/rbedrock/reference/BlockEntity.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and store BlockEntity NBT data — BlockEntity","title":"Load and store BlockEntity NBT data — BlockEntity","text":"BlockEntity data (tag 49) holds list NBT values entity data associated specific blocks.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/BlockEntity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and store BlockEntity NBT data — BlockEntity","text":"","code":"get_block_entity_data(x, z, dimension, db = default_db())  get_block_entity_value(x, z, dimension, db = default_db())  put_block_entity_data(values, x, z, dimension, db = default_db())  put_block_entity_value(value, x, z, dimension, db = default_db())"},{"path":"https://reedacartwright.github.io/rbedrock/reference/BlockEntity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and store BlockEntity NBT data — BlockEntity","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. values (named) list list NBT objects. value list NBT objects.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/BlockEntity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and store BlockEntity NBT data — BlockEntity","text":"get_block_entity_value() returns list NBT objects. get_block_entity_data() returns named list lists NBT objects.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/BlockEntity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load and store BlockEntity NBT data — BlockEntity","text":"get_block_entity_value() get_block_entity_data() load BlockEntity data db. get_block_entity_value() loads data single chunk, get_block_entity_data() loads data multiple chunks. put_block_entity_value() put_block_entity_data() store BlockEntity data one multiple chunks db.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write Blocks data — Blocks","title":"Read and write Blocks data — Blocks","text":"Blocks data stores information blocks world properties. Blocks data stored per-subchunk SubChunkBlocks data. functions wrappers around SubChunkBlocks functions make easy save load blocks entire chunk.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write Blocks data — Blocks","text":"","code":"get_blocks_value(   x,   z,   dimension,   db = default_db(),   names_only = FALSE,   extra_block = !names_only )  get_blocks_data(   x,   z,   dimension,   db = default_db(),   names_only = FALSE,   extra_block = !names_only )  put_blocks_value(value, x, z, dimension, db = default_db())  put_blocks_data(values, x, z, dimension, db = default_db())"},{"path":"https://reedacartwright.github.io/rbedrock/reference/Blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write Blocks data — Blocks","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. names_only logical scalar. Return names blocks, ignoring block states. extra_block logical scalar. Append extra block layer output (separated \";\"). mostly useful waterlogged blocks. extra block air, appended. value 16x384x16 character array. values (named) list Blocks values. x missing, names values taken keys.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Blocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write Blocks data — Blocks","text":"get_blocks_value() returns Blocks value. get_blocks_data() returns named list Blocks values.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Blocks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and write Blocks data — Blocks","text":"get_blocks_value() get_blocks_data() load Blocks data db. get_blocks_value() loads data single chunk, get_blocks_data() loads data multiple chunks. put_blocks_value() put_blocks_data() store Blocks data db.","code":""},{"path":[]},{"path":"https://reedacartwright.github.io/rbedrock/reference/Checksums.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and store Checksums data — Checksums","title":"Load and store Checksums data — Checksums","text":"Checksums data (tag 59) holds checksums several chunk records. records 2DMaps (tag 45), SubchunkBlocks (tag 47), BlockEntities (tag 49), Entities (tag 50). Checksums longer used game. get_checksums_value() get_checksums_data() load Checksums data db. get_checksums_value() loads data single chunk, get_checksums_data() loads data multiple chunks. update_checksums_value() updates_checksums_data() recalculate Checksums data db update db. write_checksums_value() encodes Checksums data raw vector. read_checksums_value() decodes binary Checksums data.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Checksums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and store Checksums data — Checksums","text":"","code":"get_checksums_value(x, z, dimension, db = default_db())  get_checksums_data(x, z, dimension, db = default_db())  update_checksums_value(x, z, dimension, db = default_db())  update_checksums_data(x, z, dimension, db = default_db())  read_checksums_value(rawvalue, key)  write_checksums_value(value)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/Checksums.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and store Checksums data — Checksums","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. rawvalue raw vector. key key prefix. value Checksums value.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Checksums.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and store Checksums data — Checksums","text":"get_checksums_value() returns Checksums value. get_checksums_data() returns named list Checksums values. Checksums values named character vectors.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/ChunkData.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and store raw chunk data — ChunkData","title":"Load and store raw chunk data — ChunkData","text":"get_chunk_value() get_chunk_data() load raw chunk data db. get_chunk_value() loads data single chunk, get_chunk_data() loads data multiple chunks. put_chunk_value() put_chunk_data() store chunk data one multiple chunks db.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/ChunkData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and store raw chunk data — ChunkData","text":"","code":"get_chunk_value(x, z, dimension, tag, subtag, db)  get_chunk_data(x, z, dimension, tag, subtag, db)  put_chunk_value(value, x, z, dimension, tag, subtag, db)  put_chunk_data(values, x, z, dimension, tag, subtag, db)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/ChunkData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and store raw chunk data — ChunkData","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. value raw vector. values list raw vectors.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/ChunkData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and store raw chunk data — ChunkData","text":"get_chunk_value() returns single raw vector. get_chunk_data() returns named list raw data.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/ChunkNBTData.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and store NBT chunk data — ChunkNBTData","title":"Load and store NBT chunk data — ChunkNBTData","text":"get_chunk_nbt_value() get_chunk_nbt_data() load NBT data chunk db. get_chunk_nbt_value() loads NBT data single chunk, get_chunk_nbt_data() loads data multiple chunks. put_chunk_nbt_value() put_chunk_nbt_data() store NBT data one multiple chunks db.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/ChunkNBTData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and store NBT chunk data — ChunkNBTData","text":"","code":"get_chunk_nbt_data(x, z, dimension, tag, subtag, db)  get_chunk_nbt_value(x, z, dimension, tag, subtag, db)  put_chunk_nbt_data(values, x, z, dimension, tag, subtag, db)  put_chunk_nbt_value(value, x, z, dimension, tag, subtag, db)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/ChunkNBTData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and store NBT chunk data — ChunkNBTData","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. values (named) list list NBT objects. value list NBT objects.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/ChunkNBTData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and store NBT chunk data — ChunkNBTData","text":"get_chunk_nbt_value() returns list NBT objects. get_chunk_nbt_data() returns named list lists NBT objects.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/ChunkVersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write chunk version data — ChunkVersion","title":"Read and write chunk version data — ChunkVersion","text":"ChunkVersion data (tag 44) stores chunk version number chunk.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/ChunkVersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write chunk version data — ChunkVersion","text":"","code":"get_chunk_version_value(x, z, dimension, db = default_db())  get_chunk_version_data(x, z, dimension, db = default_db())  put_chunk_version_value(value, x, z, dimension, db = default_db())  put_chunk_version_data(values, x, z, dimension, db = default_db())"},{"path":"https://reedacartwright.github.io/rbedrock/reference/ChunkVersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write chunk version data — ChunkVersion","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. value integer values (named) vector ChunkVersion values. x missing, names values taken keys.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/ChunkVersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write chunk version data — ChunkVersion","text":"get_chunk_version_value() returns ChunkVersion data value. get_chunk_version_data() returns named vector ChunkVersion data values.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/ChunkVersion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and write chunk version data — ChunkVersion","text":"get_chunk_version_value() get_chunk_version_data() load ChunkVersion data db. get_chunk_version_value() loads data single chunk, get_chunk_version_data() loads data multiple chunks. put_chunk_version_value() put_chunk_version_data() store ChunkVersion data db.","code":""},{"path":[]},{"path":"https://reedacartwright.github.io/rbedrock/reference/Data2D.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write Data2D data — Data2D","title":"Read and write Data2D data — Data2D","text":"Data2D data (tag 45) stores information surface heights biomes chunk. Data2D data 768 bytes long consists 256 int16s (heights) followed 256 uint8s (biomes). game longer uses 1.18. get_data2d_value() get_data2d_data() load Data2D data db. get_data2d_value() loads data single chunk, get_data2d_data() loads data multiple chunks. put_data2d_value() put_data2d_data() store Data2D data db. write_data2d_value() encodes Data2D data raw vector. read_data2d_value() decodes binary Data2D data.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Data2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write Data2D data — Data2D","text":"","code":"get_data2d_data(x, z, dimension, db = default_db())  get_data2d_value(x, z, dimension, db = default_db())  put_data2d_data(values, x, z, dimension, db = default_db())  put_data2d_value(value, x, z, dimension, db = default_db())  read_data2d_value(rawvalue)  write_data2d_value(value)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/Data2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write Data2D data — Data2D","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. values (named) list Data2D values. x missing, names values taken keys. value Data2D value. rawvalue raw vector.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Data2D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write Data2D data — Data2D","text":"get_data2d_value() returns Data2D value. get_data2d_data() returns named list Data2D values. Data2D values lists containing two elements. height_map element 16x16 matrix containing height data. biome_map element 16x16 matrix containing biome data.","code":""},{"path":[]},{"path":"https://reedacartwright.github.io/rbedrock/reference/Data3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write Data3D data — Data3D","title":"Read and write Data3D data — Data3D","text":"Data3D data (tag 43) stores information surface heights biomes chunk.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Data3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write Data3D data — Data3D","text":"","code":"get_data3d_value(x, z, dimension, db = default_db())  get_data3d_data(x, z, dimension, db = default_db())  put_data3d_value(value, x, z, dimension, db = default_db())  put_data3d_data(values, x, z, dimension, db = default_db())  read_data3d_value(rawvalue)  write_data3d_value(value)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/Data3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write Data3D data — Data3D","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. value Data3D value. values (named) list Data3D values. x missing, names values taken keys. rawvalue raw vector.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Data3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write Data3D data — Data3D","text":"get_data3d_value() returns Data3D value. get_data3d_data() returns named list Data3D values. Data3D values lists containing two elements. height_map element 16x16 matrix containing height data. biome_map element 16x384x16 array containing biome data.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Data3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and write Data3D data — Data3D","text":"get_data3d_value() get_data3d_data() load Data3D data db. get_data3d_value() loads data single chunk, get_data3d_data() loads data multiple chunks. put_data3d_value() put_data3d_data() store Data3D data db. write_data3d_value() encodes Data3D data raw vector. read_data3d_value() decodes binary Data3D data.","code":""},{"path":[]},{"path":"https://reedacartwright.github.io/rbedrock/reference/Entity.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and store Entity NBT data — Entity","title":"Load and store Entity NBT data — Entity","text":"Entity data (tag 50) holds list NBT values mobs entities game. 1.18.30, entity data migrated new actor digest format longer saved chunk data. get_entity_value() get_entity_data() load Entity data db. get_entity_value() loads data single chunk, get_entity_data() loads data multiple chunks. put_entity_value() put_entity_data() store Entity data one multiple chunks db.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Entity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and store Entity NBT data — Entity","text":"","code":"get_entity_data(x, z, dimension, db = default_db())  get_entity_value(x, z, dimension, db = default_db())  put_entity_data(values, x, z, dimension, db = default_db())  put_entity_value(value, x, z, dimension, db = default_db())"},{"path":"https://reedacartwright.github.io/rbedrock/reference/Entity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and store Entity NBT data — Entity","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. values (named) list list NBT objects. value list NBT objects.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/Entity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and store Entity NBT data — Entity","text":"get_entity_value() returns list NBT objects. get_entity_data() returns named list lists NBT objects.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/FinalizedState.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and store FinalizedState data — FinalizedState","title":"Load and store FinalizedState data — FinalizedState","text":"FinalizedState data (tag 54) holds number indicates chunk's state generation.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/FinalizedState.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and store FinalizedState data — FinalizedState","text":"","code":"get_finalized_state_value(x, z, dimension, db = default_db())  get_finalized_state_data(x, z, dimension, db = default_db())  put_finalized_state_value(value, x, z, dimension, db = default_db())  put_finalized_state_data(values, x, z, dimension, db = default_db())"},{"path":"https://reedacartwright.github.io/rbedrock/reference/FinalizedState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and store FinalizedState data — FinalizedState","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. value integer values (named) vector FinalizedState values. x missing, names values taken keys.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/FinalizedState.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and store FinalizedState data — FinalizedState","text":"get_finalized_state_value() returns ChunkVersion data value. get_finalized_state_data() returns named vector FinalizedState data values.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/FinalizedState.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load and store FinalizedState data — FinalizedState","text":"FinalizedState data contains following information. get_finalized_state_value() get_finalized_state_data() load FinalizedState data db. get_finalized_state_value() loads data single chunk, get_finalized_state_data() loads data multiple chunks. put_finalized_state_value() put_finalized_state_data() store FinalizedState data db.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/HardcodedSpawnArea.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write HardcodedSpawnArea (HSA) data — HardcodedSpawnArea","title":"Read and write HardcodedSpawnArea (HSA) data — HardcodedSpawnArea","text":"HardcodedSpawnArea (HSA) data (tag 57) stores information structure spawning locations chunk. HSA defined bounding box specifies location HSA chunk tag specifies type: version 1.21.10, HSA data longer saved world db. get_hsa_value() get_hsa_data() load HardcodedSpawnArea data db. get_hsa_value() loads data single chunk, get_hsa_data() loads data multiple chunks. put_hsa_value() put_hsa_data() store HardcodedSpawnArea data db.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/HardcodedSpawnArea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write HardcodedSpawnArea (HSA) data — HardcodedSpawnArea","text":"","code":"get_hsa_value(x, z, dimension, db = default_db())  get_hsa_data(x, z, dimension, db = default_db())  put_hsa_value(value, x, z, dimension, db = default_db())  put_hsa_data(values, x, z, dimension, db = default_db())"},{"path":"https://reedacartwright.github.io/rbedrock/reference/HardcodedSpawnArea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write HardcodedSpawnArea (HSA) data — HardcodedSpawnArea","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. value HardcodedSpawnArea value values (named) vector HardcodedSpawnArea values. x missing, names values taken keys.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/HardcodedSpawnArea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write HardcodedSpawnArea (HSA) data — HardcodedSpawnArea","text":"get_hsa_value() returns HardcodedSpawnArea data value. get_hsa_data() returns named vector HardcodedSpawnArea data values. HardcodedSpawnArea data values integer matrices.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/LegacyBiomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write legacy biomes data — LegacyBiomes","title":"Read and write legacy biomes data — LegacyBiomes","text":"Legacy Biomes data stored second map Data2D data (tag 45). get_legacy_biomes_value() get_legacy_biomes_data() load legacy biomes data db. get_legacy_biomes_value() loads data single chunk, get_legacy_biomes_data() loads data multiple chunks. put_legacy_biomes_value() put_legacy_biomes_data() store legacy biomes data db.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/LegacyBiomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write legacy biomes data — LegacyBiomes","text":"","code":"get_legacy_biomes_value(   x,   z,   dimension,   db = default_db(),   return_names = TRUE )  get_legacy_biomes_data(x, z, dimension, db = default_db(), return_names = TRUE)  put_legacy_biomes_value(   value,   x,   z,   dimension,   db = default_db(),   missing_height = 0L )  put_legacy_biomes_data(   values,   x,   z,   dimension,   db = default_db(),   missing_height = 0L )"},{"path":"https://reedacartwright.github.io/rbedrock/reference/LegacyBiomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write legacy biomes data — LegacyBiomes","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. return_names return biome names instead biome ids. value 16x16 matrix biome ids. missing_height existing height data, use value chunk. values (named) list LegacyBiomes values. x missing, names values taken keys.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/LegacyBiomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write legacy biomes data — LegacyBiomes","text":"get_legacy_biomes_value() returns legacy biomes data value. get_legacy_biomes_data() returns named list legacy biomes data values. Legacy biomes data values 16x16 matrices containing biome data.","code":""},{"path":[]},{"path":"https://reedacartwright.github.io/rbedrock/reference/LegacyChunkVersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write legacy chunk version data — LegacyChunkVersion","title":"Read and write legacy chunk version data — LegacyChunkVersion","text":"LegacyChunkVersion data (tag 118) stores chunk version number chunk. Minecraft version 1.16.100, chunk version data moved tag 118 tag 44. get_legacy_chunk_version_value() get_legacy_chunk_version_data() load LegacyChunkVersion data db. get_legacy_chunk_version_value() loads data single chunk, get_legacy_chunk_version_data() loads data multiple chunks. put_legacy_chunk_version_value() put_legacy_chunk_version_data() store LegacyChunkVersion data db.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/LegacyChunkVersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write legacy chunk version data — LegacyChunkVersion","text":"","code":"get_legacy_chunk_version_value(x, z, dimension, db = default_db())  get_legacy_chunk_version_data(x, z, dimension, db = default_db())  put_legacy_chunk_version_value(value, x, z, dimension, db = default_db())  put_legacy_chunk_version_data(values, x, z, dimension, db = default_db())"},{"path":"https://reedacartwright.github.io/rbedrock/reference/LegacyChunkVersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write legacy chunk version data — LegacyChunkVersion","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. value integer values (named) vector LegacyChunkVersion values. x missing, names values taken keys.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/LegacyChunkVersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write legacy chunk version data — LegacyChunkVersion","text":"get_legacy_chunk_version_value() returns LegacyChunkVersion data value. get_legacy_chunk_version_data() returns named vector LegacyChunkVersion data values.","code":""},{"path":[]},{"path":"https://reedacartwright.github.io/rbedrock/reference/PendingTicks.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and store PendingTicks NBT data — PendingTicks","title":"Load and store PendingTicks NBT data — PendingTicks","text":"PendingTicks data (tag 51) holds list NBT values pending ticks.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/PendingTicks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and store PendingTicks NBT data — PendingTicks","text":"","code":"get_pending_ticks_data(x, z, dimension, db = default_db())  get_pending_ticks_value(x, z, dimension, db = default_db())  put_pending_ticks_data(values, x, z, dimension, db = default_db())  put_pending_ticks_value(value, x, z, dimension, db = default_db())"},{"path":"https://reedacartwright.github.io/rbedrock/reference/PendingTicks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and store PendingTicks NBT data — PendingTicks","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. values (named) list list NBT objects. value list NBT objects.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/PendingTicks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and store PendingTicks NBT data — PendingTicks","text":"get_pending_ticks_value() returns list NBT objects. get_pending_ticks_data() returns named list lists NBT objects.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/PendingTicks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load and store PendingTicks NBT data — PendingTicks","text":"get_pending_ticks_value() get_pending_ticks_data() load PendingTicks data db. get_pending_ticks_value() loads data single chunk, get_pending_ticks_data() loads data multiple chunks. put_pending_ticks_value() put_pending_ticks_data() store PendingTicks data one multiple chunks db.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/RandomTicks.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and store RandomTicks NBT data — RandomTicks","title":"Load and store RandomTicks NBT data — RandomTicks","text":"RandomTicks data (tag 59) holds list NBT values random ticks.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/RandomTicks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and store RandomTicks NBT data — RandomTicks","text":"","code":"get_random_ticks_data(x, z, dimension, db = default_db())  get_random_ticks_value(x, z, dimension, db = default_db())  put_random_ticks_data(values, x, z, dimension, db = default_db())  put_random_ticks_value(value, x, z, dimension, db = default_db())"},{"path":"https://reedacartwright.github.io/rbedrock/reference/RandomTicks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and store RandomTicks NBT data — RandomTicks","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. db bedrockdb object. values (named) list list NBT objects. value list NBT objects.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/RandomTicks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and store RandomTicks NBT data — RandomTicks","text":"get_random_ticks_value() returns list NBT objects. get_random_ticks_data() returns named list lists NBT objects.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/RandomTicks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load and store RandomTicks NBT data — RandomTicks","text":"get_random_ticks_value() get_random_ticks_data() load RandomTicks data db. get_random_ticks_value() loads data single chunk, get_random_ticks_data() loads data multiple chunks. put_random_ticks_value() put_random_ticks_data() store RandomTicks data one multiple chunks db.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/SubChunkBlocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and store SubChunkBlocks data — SubChunkBlocks","title":"Load and store SubChunkBlocks data — SubChunkBlocks","text":"SubChunkBlocks data (tag 47) stores information blocks world. chunk divided multiple 16x16x16 subchunks, blocks subchunk stored separately. Blocks stored per subchunk palette-based format. Block storage separated multiple layers layer block palette block ids. practices subchunks either one two layers, extra layer -often used store water water-logged blocks.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/SubChunkBlocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and store SubChunkBlocks data — SubChunkBlocks","text":"","code":"get_subchunk_blocks_value(x, z, dimension, subchunk, db = default_db())  get_subchunk_blocks_data(x, z, dimension, subchunk, db = default_db())  put_subchunk_blocks_value(   value,   x,   z,   dimension,   subchunk,   db = default_db(),   version = 9L )  put_subchunk_blocks_data(   values,   x,   z,   dimension,   subchunk,   db = default_db(),   version = 9L )  read_subchunk_blocks_value(rawvalue, subchunk_position = NA_integer_)  write_subchunk_blocks_value(value, subchunk_position, version = 9L)  subchunk_blocks_value_as_array(   value,   names_only = FALSE,   extra_block = !names_only )  subchunk_blocks_array_as_value(r)  subchunk_origins(keys)  subchunk_coords(ind, origins = subchunk_origins(names(ind)))"},{"path":"https://reedacartwright.github.io/rbedrock/reference/SubChunkBlocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and store SubChunkBlocks data — SubChunkBlocks","text":"x, z, dimension Chunk coordinates extract data . x can also character vector db keys. subchunk Subchunk indexes db bedrockdb object. value SubChunkBlocks data value version format subchunk data use values (named) list SubChunkBlocks data values. x missing, names values taken keys. rawvalue raw vector subchunk_position Optional, integer. reading value, used value's position attribute missing. writing value, used place value's position attribute. names_only logical scalar. Return names blocks, ignoring block states. extra_block logical scalar. Append extra block layer output (separated \";\"). mostly useful waterlogged blocks. extra block air, appended. r character array keys character vector keys. ind Numeric vector named list numeric vectors containing indexes blocks subchunk. origins matrix subchunk origins.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/SubChunkBlocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and store SubChunkBlocks data — SubChunkBlocks","text":"get_subchunk_blocks_value() returns SubChunkBlocks data value. get_biomes_data() returns named list SubChunkBlocks data values.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/SubChunkBlocks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load and store SubChunkBlocks data — SubChunkBlocks","text":"format description can found https://gist.github.com/Tomcc/a96af509e275b1af483b25c543cfbf37. get_subchunk_blocks_value() get_subchunk_blocks_data() load SubChunkBlocks data db. get_subchunk_blocks_value() loads data single subchunk, get_subchunk_blocks_data() loads data multiple subchunks. put_subchunk_blocks_value() put_subchunk_blocks_data() store SubChunkBlocks data db. write_subchunk_blocks_value() encodes SubChunkBlocks data raw vector. read_subchunk_blocks_value() decodes binary SubChunkBlocks data. subchunk_blocks_value_as_array() converts SubChunkBlocks data character array. subchunk_origins() returns matrix containing block coordinate lower NW corner subchunk keys. subchunk_coords() determines block coordinates blocks based array indexes subchunk origins.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrock_leveldb_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a LevelDB Database — bedrock_leveldb_open","title":"Open a LevelDB Database — bedrock_leveldb_open","text":"Create leveldb object, interact LevelDB database.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrock_leveldb_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a LevelDB Database — bedrock_leveldb_open","text":"","code":"bedrock_leveldb_open(   path,   create_if_missing = NULL,   error_if_exists = NULL,   paranoid_checks = NULL,   write_buffer_size = NULL,   max_open_files = NULL,   block_size = NULL,   cache_capacity = NULL,   bloom_filter_bits_per_key = NULL,   compression_level = NULL )"},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrock_leveldb_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a LevelDB Database — bedrock_leveldb_open","text":"path path database, stored filesystem. create directory path one exist (create_if_missing TRUE. create_if_missing Create database one already exist path (defaults TRUE, differs LevelDB default FALSE). error_if_exists Throw error database already exists path  (LevelDB default: FALSE). paranoid_checks TRUE, LevelDB aggressive checking data processing stop early detects errors.  may unforeseen ramifications: example, corruption one DB entry may cause large number entries become unreadable entire DB become unopenable.  (LevelDB default: FALSE). write_buffer_size Amount data (bytes) build memory (backed unsorted log disk) converting sorted -disk file.  Larger values increase performance, especially bulk loads.  two write buffers may held memory time, may wish adjust parameter control memory usage.  Also, larger write buffer result longer recovery time next time database opened. max_open_files Number files can used database.  may need increase database large working set (budget one open file per 2MB working set). (LevelDB default: 1000). block_size approximate size user data packed per block (user data stored set blocks, block unit reading disk).  block size corresponds uncompressed data; actual size unit read disk may smaller compression enabled (LevelDB default: 4K) cache_capacity size cache use.  non-NULL must non-negative integer, indicating size cache bytes.  NULL (default) LevelDB create 8MB internal cache. bloom_filter_bits_per_key non-NULL, sets 'filter policy' reduce disk reads.  good value bits_per_key 10, yields filter ~ 1% false positive rate.  information LevelDB headers (filter_policy.h) \"object responsible creating small filter set keys.  filters stored leveldb consulted automatically leveldb decide whether read information disk. many cases, filter can cut number disk seeks form handful single disk seek per DB::Get() call\"","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrock_leveldb_open.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Open a LevelDB Database — bedrock_leveldb_open","text":"optional arguments (.e., path) value NULL means use LevelDB default; LevelDB default argument indicated argument documentation. function returns 'R6' class number methods.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrock_leveldb_open.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Open a LevelDB Database — bedrock_leveldb_open","text":"Rich FitzJohn","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrock_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Number Generation for Minecraft — bedrock_random","title":"Random Number Generation for Minecraft — bedrock_random","text":"Bedrock Edition's central random number algorithm MT19937. However, R's MT19937 code compatible Bedrock's. routines provide API compatible Bedrock's. bedrock_random_seed() seeds random number generator. bedrock_random_state() returns current state random number generator raw vector. bedrock_random_get_uint() returns 32-bit random integer. Default range [0, 2^32-1]. bedrock_random_get_int() returns 31-bit random integer. Default range [0, 2^31-1]. bedrock_random_get_float() returns random real number. Default range [0.0, 1.0). bedrock_random_get_double() returns random real number Default range [0.0, 1.0).","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrock_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Number Generation for Minecraft — bedrock_random","text":"","code":"bedrock_random_seed(value)  bedrock_random_state(new_state = NULL)  bedrock_random_get_uint(n, max)  bedrock_random_get_int(n, min, max)  bedrock_random_get_float(n, min, max)  bedrock_random_get_double(n)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrock_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Number Generation for Minecraft — bedrock_random","text":"value scalar integer new_state raw vector n number observations. min, max lower upper limits distribution. Must finite. one specified, taken max. neither specified, default range used.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrock_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Number Generation for Minecraft — bedrock_random","text":"","code":"# seed the global random number generator bedrock_random_seed(5490L) #> NULL  # save and restore rng state saved_state <- bedrock_random_state() bedrock_random_get_uint(10) #>  [1] 2248850472 2838390091  333212849 1904364082  893966104 3694621526 #>  [7]  971023934 3050836922 1272704213 4283041477 bedrock_random_state(saved_state) bedrock_random_get_uint(10) #>  [1] 2248850472 2838390091  333212849 1904364082  893966104 3694621526 #>  [7]  971023934 3050836922 1272704213 4283041477"},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrock_random_create_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Number Seeds for Minecraft — bedrock_random_create_seed","title":"Random Number Seeds for Minecraft — bedrock_random_create_seed","text":"Minecraft uses several different kind seeds world generation gameplay.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrock_random_create_seed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Number Seeds for Minecraft — bedrock_random_create_seed","text":"","code":"bedrock_random_create_seed(x, z, a, b, salt, type)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrock_random_create_seed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Number Seeds for Minecraft — bedrock_random_create_seed","text":"x, z chunk coordinates , b seed parameters salt seed parameter type seed type use","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrock_random_create_seed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Random Number Seeds for Minecraft — bedrock_random_create_seed","text":"bedrock_random_create_seed() constructs seed using formulas type 1: x*^ z*b ^ salt, type 2: x*+ z*b + salt, type 3: x*+ z*b ^ salt.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrock_random_create_seed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Number Seeds for Minecraft — bedrock_random_create_seed","text":"","code":"# identify slime chunks g <- expand.grid(x=1:10, z=1:10) is_slime_chunk <- mapply(g$x, g$z, FUN = function(x,z) {   seed <- bedrock_random_create_seed(x,z,0x1f1f1f1f,1,0,type=1)   bedrock_random_seed(seed)   bedrock_random_get_uint(1,10) == 0 })"},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrockdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a Bedrock Edition world for reading and writing. — bedrockdb","title":"Open a Bedrock Edition world for reading and writing. — bedrockdb","text":"bedrockdb opens handle leveldb database contains save-game data Bedrock Edition world. success, returns R6 class type 'bedrockdb' can used directly low-level reading writing access db can passed higher-level functions. handle database can closed passing close.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrockdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a Bedrock Edition world for reading and writing. — bedrockdb","text":"","code":"bedrockdb(   path,   create_if_missing = FALSE,   error_if_exists = NULL,   paranoid_checks = NULL,   write_buffer_size = 4194304L,   max_open_files = NULL,   block_size = 163840L,   cache_capacity = 83886080L,   bloom_filter_bits_per_key = 10L,   compression_level = -1L )  # S3 method for class 'bedrockdb' close(con, compact = FALSE, ...)  is_bedrockdb(x)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrockdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a Bedrock Edition world for reading and writing. — bedrockdb","text":"path path world folder. path exist, assumed base name world folder local minecraftWorlds directory. create_if_missing Create world database exist. error_if_exists Raise error world database already exists. paranoid_checks Internal leveldb option write_buffer_size Internal leveldb option max_open_files Internal leveldb option block_size Internal leveldb option cache_capacity Internal leveldb option bloom_filter_bits_per_key Internal leveldb option compression_level Internal leveldb option con database object created bedrockdb. compact Compact database closing. ... arguments passed methods. x object.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrockdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a Bedrock Edition world for reading and writing. — bedrockdb","text":"success, bedrockdb returns R6 class type 'bedrockdb'.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/bedrockdb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a Bedrock Edition world for reading and writing. — bedrockdb","text":"","code":"# open an example works and get all keys dbpath <- rbedrock_example_world(\"example1.mcworld\") db <- bedrockdb(dbpath) keys <- get_keys() close(db)  if (FALSE) { # \\dontrun{  # open a world in the minecraftWorlds folder using a world id. db <- bedrockdb(\"lrkkYFpUABA=\") # do something with db ... close(db)  # open a world using absolute path db <- bedrockdb(\"C:\\\\\\\\minecraftWorlds\\\\\\\\my_world\") # do something with db ... close(db) } # }"},{"path":"https://reedacartwright.github.io/rbedrock/reference/biome_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Bedrock biome data — biome_df","title":"Bedrock biome data — biome_df","text":"Information biomes used Bedrock edition. Generated PyMCTranslate project. Colors generated cubiomes project.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/biome_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bedrock biome data — biome_df","text":"","code":"biome_df"},{"path":"https://reedacartwright.github.io/rbedrock/reference/biome_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bedrock biome data — biome_df","text":"data.frame 87 rows 5 columns. bedrock_id numeric id biome. bedrock_name name biome. java_name name equivalent biome Java edition. universal_name universal name used biome Amulet. color color used mapping biomes.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/biome_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bedrock biome data — biome_df","text":"https://github.com/gentlegiantJGC/PyMCTranslate/ https://github.com/Cubitect/cubiomes/","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/blocks_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert block data from nbt format to a string — blocks_str","title":"Convert block data from nbt format to a string — blocks_str","text":"Block data stored nbt format, includes block's name properties. blocks_str() converts nbt data strings following format: blockname@prop1=val1@prop2=val2. Blocks can zero properties. blocks_nbt() inverse operation.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/blocks_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert block data from nbt format to a string — blocks_str","text":"","code":"blocks_str(x, names_only = FALSE)  blocks_nbt(x)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/blocks_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert block data from nbt format to a string — blocks_str","text":"x block data, either list nbt values vector strings. names_only logical scalar. Return names blocks, ignoring block properties.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/chrkeys_to_rawkeys.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert between key types. — chrkeys_to_rawkeys","title":"Convert between key types. — chrkeys_to_rawkeys","text":"rbedrock represents database keys two different ways. chrkeys human-readable format understood functions. rawkeys used internally, methods bedrockdb objects bedrock_leveldb_* functions.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/chrkeys_to_rawkeys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert between key types. — chrkeys_to_rawkeys","text":"","code":"chrkeys_to_rawkeys(keys)  chrkeys_to_rawkeys_1(keys)  rawkeys_to_chrkeys(keys)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/chrkeys_to_rawkeys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert between key types. — chrkeys_to_rawkeys","text":"keys character vector chrkeys list rawkeys","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/chrkeys_to_rawkeys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert between key types. — chrkeys_to_rawkeys","text":"chrkeys_to_rawkeys() returns list raw vectors.","code":"`rawkeys_to_chrkeys()` returns a character vector.      `chrkeys_to_rawkeys_1()` returns a raw vector."},{"path":"https://reedacartwright.github.io/rbedrock/reference/chunk_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract or replace chunk blocks from an array — chunk_blocks","title":"Extract or replace chunk blocks from an array — chunk_blocks","text":"Convenience wrappers around [ extract replace blocks array based block coordinates.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/chunk_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract or replace chunk blocks from an array — chunk_blocks","text":"","code":"chunk_blocks(x, ..., drop = TRUE, origin = chunk_origin(x))  chunk_blocks(x, ..., origin = chunk_origin(x)) <- value"},{"path":"https://reedacartwright.github.io/rbedrock/reference/chunk_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract or replace chunk blocks from an array — chunk_blocks","text":"x Object extract element(s) replace element(s). ... block coordinates specifying elements extract replace. Can numeric, logical, missing. numeric, coordinates mapped indices unless single, non-matrix argument. drop TRUE result coerced lowest possible dimension. origin origin chunk array, used mapping coordinates indices value array-like R object similar class x","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/chunk_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and manipulate chunk keys — chunk_keys","title":"Read and manipulate chunk keys — chunk_keys","text":"Chunk keys keys chunk data. chunk key format indicates chunk holds data type data holds. format either chunk:x:z:d:t chunk:x:z:d:t:s, x z indicates coordinates chunk chunk space, d indicates dimension chunk, t s indicate tag subtag chunk. parse_chunk_keys() splits chunk keys individual elements returns table results. create_chunk_keys() returns vector chunk keys formed arguments. chunk_positions() returns matrix containing chunk coordinates keys. chunk_origins() returns matrix containing block coordinate NW corner keys. chunk_tag_str() chunk_tag_int() convert integer character representations chunk tags.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/chunk_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and manipulate chunk keys — chunk_keys","text":"","code":"parse_chunk_keys(keys)  create_chunk_keys(x, z, dimension, tag, subtag)  chunk_positions(keys)  chunk_origins(keys)  chunk_tag_str(tags)  chunk_tag_int(tags)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/chunk_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and manipulate chunk keys — chunk_keys","text":"keys character vector database keys. x Chunk x-coordinate. z Chunk z-coordinate. dimension Dimension. tag type chunk data. subtag subchunk key refers (used tag 47). tags vector","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/chunk_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and manipulate chunk keys — chunk_keys","text":"","code":"parse_chunk_keys(\"chunk:0:0:0:44\") #> # A tibble: 1 × 6 #>   key                x     z dimension tag     subtag #>   <chr>          <int> <int>     <int> <chr>    <int> #> 1 chunk:0:0:0:44     0     0         0 Version     NA parse_chunk_keys(\"chunk:0:0:0:47:1\") #> # A tibble: 1 × 6 #>   key                  x     z dimension tag            subtag #>   <chr>            <int> <int>     <int> <chr>           <int> #> 1 chunk:0:0:0:47:1     0     0         0 SubChunkBlocks      1 create_chunk_keys(0, 0, 0, 47, 1) #> [1] \"chunk:0:0:0:47:1\""},{"path":"https://reedacartwright.github.io/rbedrock/reference/chunk_origin.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set the coordinates of the origin of a chunk — chunk_origin","title":"Get or set the coordinates of the origin of a chunk — chunk_origin","text":"Get set coordinates origin chunk","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/chunk_origin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set the coordinates of the origin of a chunk — chunk_origin","text":"","code":"chunk_origin(x)  chunk_origin(x) <- value"},{"path":"https://reedacartwright.github.io/rbedrock/reference/chunk_origin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set the coordinates of the origin of a chunk — chunk_origin","text":"x array block data value integer vector","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/compact_world.html","id":null,"dir":"Reference","previous_headings":"","what":"Compact a world database. — compact_world","title":"Compact a world database. — compact_world","text":"Compact world database.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/compact_world.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compact a world database. — compact_world","text":"","code":"compact_world(db)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/default_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Get/set the default db connection. — default_db","title":"Get/set the default db connection. — default_db","text":"default db db connection rbedrock uses default. defaults recently opened db, can also set user.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/default_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get/set the default db connection. — default_db","text":"","code":"default_db(db, check = TRUE)  with_db(db, code, close = is.character(db))  local_db(db, .local_envir = parent.frame(), close = is.character(db))"},{"path":"https://reedacartwright.github.io/rbedrock/reference/default_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get/set the default db connection. — default_db","text":"db default_db(), bedrockdb object. with_db() local_db(), path world db open existing bedrockdb object. check Check validity db? Set FALSE skip check. code Code execute temporary environment. close Close db done? Set TRUE close db automatically. .local_envir environment use scoping.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/default_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get/set the default db connection. — default_db","text":"default_db(), calculated value default db. default_db(db), previously manually set value default_db(). with_db(db, code), result evaluating code db default db. local_db(db), value db.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/default_db.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get/set the default db connection. — default_db","text":"Invoking default_db() returns current default connection recently opened one. Invoking default_db(db) updates current default returns previous set value. default_db(NULL) can used unset default db revert last opened one. Closing db unset default db well. with_db() local_db() temporarily change default db.","code":""},{"path":[]},{"path":"https://reedacartwright.github.io/rbedrock/reference/default_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get/set the default db connection. — default_db","text":"","code":"dbpath <- rbedrock_example_world(\"example1.mcworld\") dbz <- bedrockdb(dbpath) default_db(dbz) # set default default_db() # returns dbz default_db(NULL) # unset default #cleanup close(dbz) with_db(dbpath, length(get_keys)) #> [1] 1 db <- local_db(dbpath) length(get_keys()) #> Error: `db` is not an open bedrockdb connection. close(db) unlink(dbpath, recursive = TRUE)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/delete_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove values from a bedrockdb. — delete_values","title":"Remove values from a bedrockdb. — delete_values","text":"Remove values bedrockdb.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/delete_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove values from a bedrockdb. — delete_values","text":"","code":"delete_values(   keys,   db = default_db(),   report = FALSE,   readoptions = NULL,   writeoptions = NULL )"},{"path":"https://reedacartwright.github.io/rbedrock/reference/delete_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove values from a bedrockdb. — delete_values","text":"keys character vector keys. db bedrockdb object report logical indicating whether generate report deleted keys readoptions bedrock_leveldb_readoptions object writeoptions bedrock_leveldb_writeoptions object","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/delete_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove values from a bedrockdb. — delete_values","text":"report == TRUE, logical vector indicating keys deleted.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read values stored in a bedrockdb. — key_prefix","title":"Read values stored in a bedrockdb. — key_prefix","text":"Read values stored bedrockdb.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read values stored in a bedrockdb. — key_prefix","text":"","code":"key_prefix(prefix)  starts_with(prefix)  get_data(keys, db = default_db(), readoptions = NULL)  get_value(key, db = default_db(), readoptions = NULL)  has_values(keys, db = default_db(), readoptions = NULL)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read values stored in a bedrockdb. — key_prefix","text":"prefix string specifying key prefix keys character vector keys db bedrockdb object readoptions bedrock_leveldb_readoptions object key single key","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read values stored in a bedrockdb. — key_prefix","text":"get_data()returns named-list raw vectors.get_value()` returns raw vector. has_values() returns logical vector.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/get_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of keys stored in a bedrockdb. — get_keys","title":"Get a list of keys stored in a bedrockdb. — get_keys","text":"Get list keys stored bedrockdb.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/get_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of keys stored in a bedrockdb. — get_keys","text":"","code":"get_keys(prefix = NULL, db = default_db(), readoptions = NULL)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/get_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of keys stored in a bedrockdb. — get_keys","text":"prefix string specifying chunk prefix string prefix. db bedrockdb object readoptions bedrock_leveldb_readoptions object","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/get_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of keys stored in a bedrockdb. — get_keys","text":"vector containing keys found bedrockdb. prefix specified, vector filtered based specified prefix.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/get_nbt_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and Write NBT Data — get_nbt_data","title":"Read and Write NBT Data — get_nbt_data","text":"Named Binary Tag (NBT) format used Minecraft various data types.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/get_nbt_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and Write NBT Data — get_nbt_data","text":"","code":"get_nbt_data(keys, db = default_db(), readoptions = NULL, simplify = TRUE)  get_nbt_value(key, db = default_db(), readoptions = NULL, simplify = TRUE)  put_nbt_data(values, keys, db = default_db(), writeoptions = NULL)  put_nbt_value(value, key, db = default_db(), writeoptions = NULL)  read_nbt(   rawvalue,   format = c(\"little\", \"big\", \"network\", \"network_big\"),   simplify = TRUE )  read_nbt_data(   rawdata,   format = c(\"little\", \"big\", \"network\", \"network_big\"),   simplify = TRUE )  write_nbt(value, format = c(\"little\", \"big\", \"network\", \"network_big\"))  write_nbt_data(values, format = c(\"little\", \"big\", \"network\", \"network_big\"))"},{"path":"https://reedacartwright.github.io/rbedrock/reference/get_nbt_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and Write NBT Data — get_nbt_data","text":"keys character vector keys db bedrockdb object readoptions bedrock_leveldb_readoptions object simplify TRUE, simplifies list containing single unnamed nbt value. key single key values list values. Optionally named. writeoptions bedrock_leveldb_writeoptions object value nbt object list nbt objects rawvalue raw vector format character string specifying binary NBT format use. rawdata list raw vectors","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/get_nbt_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and Write NBT Data — get_nbt_data","text":"get_nbt_data() get_nbt_value() load nbt-formatted data db parses . put_nbt_data() put_nbt_value() store nbt data db binary form. read_nbt() reads NBT data raw vector. read_nbt_data() calls read_nbt() element list. write_nbt() encodes NBT data raw vector. write_nbt_data() calls write_nbt() element list.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/locate_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate the coordinates of blocks in a chunk — locate_blocks","title":"Locate the coordinates of blocks in a chunk — locate_blocks","text":"Locate coordinates blocks chunk","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/locate_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate the coordinates of blocks in a chunk — locate_blocks","text":"","code":"locate_blocks(blocks, pattern, negate = FALSE)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/locate_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate the coordinates of blocks in a chunk — locate_blocks","text":"blocks character array containing block data. pattern pattern look . Passed base::grep. negate TRUE, return non-matching elements.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/locate_blocks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Locate the coordinates of blocks in a chunk — locate_blocks","text":"","code":"dbpath <- rbedrock_example_world(\"example1.mcworld\") db <- bedrockdb(dbpath) blocks <- get_blocks_value(db, x=37, z=10, dimension=0) locate_blocks(blocks, \"ore\") #> # A tibble: 268 × 4 #>        x     y     z block              #>    <dbl> <dbl> <dbl> <chr>              #>  1   605     3   167 minecraft:iron_ore #>  2   597     4   168 minecraft:iron_ore #>  3   599     4   166 minecraft:iron_ore #>  4   599     4   167 minecraft:iron_ore #>  5   600     4   166 minecraft:iron_ore #>  6   600     4   167 minecraft:iron_ore #>  7   595     5   168 minecraft:gold_ore #>  8   596     5   168 minecraft:iron_ore #>  9   598     5   166 minecraft:iron_ore #> 10   599     5   166 minecraft:iron_ore #> # ℹ 258 more rows close(db)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/minecraft_worlds.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilities for working with Minecraft world folders. — minecraft_worlds","title":"Utilities for working with Minecraft world folders. — minecraft_worlds","text":"world_dir_path() returns path minecraftWorlds directory. Use options(rbedrock.worlds_dir_path = \"custom/path\") customize path needed. list_worlds() returns data.frame() containing information Minecraft saved games. create_world() creates new Minecraft world. export_world() exports world archive file.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/minecraft_worlds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilities for working with Minecraft world folders. — minecraft_worlds","text":"","code":"worlds_dir_path(force_default = FALSE)  list_worlds(worlds_dir = worlds_dir_path())  create_world(id = NULL, ..., worlds_dir = worlds_dir_path())  export_world(id, file, worlds_dir = worlds_dir_path(), replace = FALSE)  import_world(file, id = NULL, ..., worlds_dir = worlds_dir_path())  get_world_path(id, worlds_dir = worlds_dir_path())"},{"path":"https://reedacartwright.github.io/rbedrock/reference/minecraft_worlds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utilities for working with Minecraft world folders. — minecraft_worlds","text":"force_default TRUE, return likely world path system. worlds_dir path minecraftWorlds directory. id path world folder. path absolute exist, assumed base name world folder worlds_dir. import_world(), id NULL unique world id generated. generated controlled rbedrock.rand_world_id global options. Possible values \"pretty\" \"mcpe\". ... Arguments customize level.dat settings. Supports dynamic dots via rlang::list2(). file path mcworld file. exporting, created. importing, extracted. replace TRUE, overwrite existing file necessary.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/minecraft_worlds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utilities for working with Minecraft world folders. — minecraft_worlds","text":"","code":"if (FALSE) { # \\dontrun{ create_world(LevelName = \"My World\", RandomSeed = 10) } # }"},{"path":"https://reedacartwright.github.io/rbedrock/reference/nbt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an NBT value — nbt","title":"Create an NBT value — nbt","text":"Named Binary Tag (NBT) format used Minecraft various data types. NBT value holds 'payload' data 'tag' indicating type data held.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/nbt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an NBT value — nbt","text":"","code":"unnbt(x)  nbt_compound(...)  nbt_byte(x)  nbt_byte_array(x)  nbt_byte_list(x)  nbt_byte_array_list(x)  nbt_short(x)  nbt_short_list(x)  nbt_int(x)  nbt_int_array(x)  nbt_int_list(x)  nbt_int_array_list(x)  nbt_float(x)  nbt_float_list(x)  nbt_double(x)  nbt_double_list(x)  nbt_long(x)  nbt_long_array(x)  nbt_long_list(x)  nbt_long_array_list(x)  nbt_string(x)  nbt_raw_string(x)  nbt_string_list(x)  nbt_raw_string_list(x)  nbt_empty_list(x = list())  nbt_compound_list(x)  nbt_nested_list(x)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/nbt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an NBT value — nbt","text":"x nbt payload. ... NBT objects, possibly named.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/nbt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an NBT value — nbt","text":"nbt_*() family functions create nbt data types. unnbt() recursively strips NBT metadata NBT value.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/nbt_list_of.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of nbt objects. — nbt_list_of","title":"Create a list of nbt objects. — nbt_list_of","text":"Create list nbt objects.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/nbt_list_of.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of nbt objects. — nbt_list_of","text":"","code":"nbt_list_of(...)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/nbt_list_of.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list of nbt objects. — nbt_list_of","text":"... NBT objects, possibly named.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/put_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write values to a bedrockdb. — put_data","title":"Write values to a bedrockdb. — put_data","text":"Write values bedrockdb.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/put_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write values to a bedrockdb. — put_data","text":"","code":"put_data(values, keys, db = default_db(), writeoptions = NULL)  put_value(value, key, db = default_db(), writeoptions = NULL)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/put_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write values to a bedrockdb. — put_data","text":"values list raw values. keys character vector keys. db bedrockdb object writeoptions bedrock_leveldb_writeoptions object value raw vector contains information written. key key used store data.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/put_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write values to a bedrockdb. — put_data","text":"invisible copy db.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/rac_cast.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast a value to a specific type — rac_cast","title":"Cast a value to a specific type — rac_cast","text":"helper function used (mostly) modifying NBT values.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/rac_cast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast a value to a specific type — rac_cast","text":"","code":"rac_cast(x, to, ..., x_arg = \"x\")"},{"path":"https://reedacartwright.github.io/rbedrock/reference/rac_cast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast a value to a specific type — rac_cast","text":"x Value cast Type cast ... Currently unused. x_arg Argument name x, used error messages.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/rac_type_full.html","id":null,"dir":"Reference","previous_headings":"","what":"Object type as a string — rac_type_full","title":"Object type as a string — rac_type_full","text":"rac_type_full() displays fill type object. rac_type_abbr() provides abbreviated description.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/rac_type_full.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object type as a string — rac_type_full","text":"","code":"rac_type_full(x)  rac_type_abbr(x)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/rac_type_full.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object type as a string — rac_type_full","text":"x object.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/rbedrock-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rbedrock: Analysis and Manipulation of Data from Minecraft Bedrock Edition — rbedrock-package","title":"rbedrock: Analysis and Manipulation of Data from Minecraft Bedrock Edition — rbedrock-package","text":"Implements interface Minecraft (Bedrock Edition) worlds. Supports analysis management worlds game saves.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/rbedrock-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rbedrock: Analysis and Manipulation of Data from Minecraft Bedrock Edition — rbedrock-package","text":"rbedrock currently development.","code":""},{"path":[]},{"path":"https://reedacartwright.github.io/rbedrock/reference/rbedrock-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rbedrock: Analysis and Manipulation of Data from Minecraft Bedrock Edition — rbedrock-package","text":"Maintainer: Reed Cartwright racartwright@gmail.com (ORCID) contributors: Rich FitzJohn rich.fitzjohn@gmail.com [contributor] Christian Stigen Larsen [contributor] LevelDB Authors [copyright holder]","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/rbedrock_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to rbedrock example — rbedrock_example","title":"Get path to rbedrock example — rbedrock_example","text":"rbedrock comes bundled number sample files inst/extdata directory. function make easy access.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/rbedrock_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to rbedrock example — rbedrock_example","text":"","code":"rbedrock_example(path = NULL)  rbedrock_example_world(path)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/rbedrock_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to rbedrock example — rbedrock_example","text":"path Name file directory. NULL, examples listed.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/rbedrock_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to rbedrock example — rbedrock_example","text":"","code":"rbedrock_example() #> [1] \"default_level.dat\" \"example1.mcworld\"  \"example2.mcworld\"  #> [4] \"example3.mcworld\"  rbedrock_example(\"example1.mcworld\") #> [1] \"/home/runner/work/_temp/Library/rbedrock/extdata/example1.mcworld\" rbedrock_example_world(\"example1.mcworld\") #> [1] \"/tmp/RtmpZl3isZ/world205f3d018c92\""},{"path":"https://reedacartwright.github.io/rbedrock/reference/read_leveldat.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write data from a world's level.dat file. — read_leveldat","title":"Read and write data from a world's level.dat file. — read_leveldat","text":"Read write data world's level.dat file.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/read_leveldat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write data from a world's level.dat file. — read_leveldat","text":"","code":"read_leveldat(path)  write_leveldat(object, path, version = 8L)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/read_leveldat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write data from a world's level.dat file. — read_leveldat","text":"path path world folder. path exist, assumed base name world folder local minecraftWorlds directory. object NBT data written level.dat. version level.dat format version file header.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/read_leveldat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write data from a world's level.dat file. — read_leveldat","text":"read_leveldat returns nbt data. write_leveldat returns copy data written.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/read_leveldat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and write data from a world's level.dat file. — read_leveldat","text":"","code":"# Fix level.dat after opening a world in creative. dbpath <- rbedrock_example_world(\"example1.mcworld\") dat <- read_leveldat(dbpath) dat$hasBeenLoadedInCreative <- FALSE write_leveldat(dat, dbpath)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/repair_world.html","id":null,"dir":"Reference","previous_headings":"","what":"Try to repair a world database. — repair_world","title":"Try to repair a world database. — repair_world","text":"Try repair world database.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/repair_world.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Try to repair a world database. — repair_world","text":"","code":"repair_world(id)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/rnbt.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw Named Binary Tag Format — rnbt","title":"Raw Named Binary Tag Format — rnbt","text":"rnbt recursive, intermediate data structure closely resembles NBT data encoded.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/rnbt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw Named Binary Tag Format — rnbt","text":"","code":"read_rnbt(rawvalue, format = c(\"little\", \"big\", \"network\", \"network_big\"))  read_rnbt_once(rawvalue, format = c(\"little\", \"big\", \"network\", \"network_big\"))  write_rnbt(x, format = c(\"little\", \"big\", \"network\", \"network_big\"))  from_rnbt(x)  to_rnbt(x)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/rnbt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw Named Binary Tag Format — rnbt","text":"rawvalue raw vector format character string specifying binary NBT format use. x object","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/rnbt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Raw Named Binary Tag Format — rnbt","text":"read_rnbt() converts raw vector rnbt data. write_rnbt() converts rnbt data raw vector from_rnbt() converts rnbt data nbt data. to_rnbt() converts nbt data rnbt data.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/simulation_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a player-based simulation area — simulation_area","title":"Calculate a player-based simulation area — simulation_area","text":"Calculate player-based simulation area","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/simulation_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a player-based simulation area — simulation_area","text":"","code":"simulation_area(sim_distance, x = 0, z = 0)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/simulation_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a player-based simulation area — simulation_area","text":"sim_distance sim distance setting x, z Chunk coordinates player standing","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/simulation_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a player-based simulation area — simulation_area","text":"data.frame containing chunk coordinates simulation area.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/spawning_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a player-based spawning area — spawning_area","title":"Calculate a player-based spawning area — spawning_area","text":"Calculate player-based spawning area","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/spawning_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a player-based spawning area — spawning_area","text":"","code":"spawning_area(sim_distance, x = 0, z = 0)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/spawning_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a player-based spawning area — spawning_area","text":"sim_distance sim distance setting x, z Chunk coordinates player standing (can fractional)","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/spawning_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a player-based spawning area — spawning_area","text":"data.frame containing chunk coordinates spawning area.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/to_rnbt_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an nbt value to an rnbt value — to_rnbt_value","title":"Convert an nbt value to an rnbt value — to_rnbt_value","text":"helper function used convert nbt values rnbt data.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/to_rnbt_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an nbt value to an rnbt value — to_rnbt_value","text":"","code":"to_rnbt_value(x, ...)"},{"path":"https://reedacartwright.github.io/rbedrock/reference/to_rnbt_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an nbt value to an rnbt value — to_rnbt_value","text":"x Value cast ... Currently unused.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/vanilla_block_states_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Bedrock block data — vanilla_block_states_df","title":"Bedrock block data — vanilla_block_states_df","text":"Information blocks used Bedrock edition. Generated PyMCTranslate project.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/vanilla_block_states_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bedrock block data — vanilla_block_states_df","text":"","code":"vanilla_block_states_df  vanilla_block_list  vanilla_block_property_type_list"},{"path":[]},{"path":"https://reedacartwright.github.io/rbedrock/reference/vanilla_block_states_df.html","id":"vanilla-block-states-df","dir":"Reference","previous_headings":"","what":"vanilla_block_states_df","title":"Bedrock block data — vanilla_block_states_df","text":"data.frame long-format 1131 rows 5 columns. Block data version 18168865. name Block name. property Property name. type Property type. default Default value. allowed Allowed values.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/vanilla_block_states_df.html","id":"vanilla-block-list","dir":"Reference","previous_headings":"","what":"vanilla_block_list","title":"Bedrock block data — vanilla_block_states_df","text":"List blocks names. Includes blocks without properties, show vanilla_block_states_df.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/vanilla_block_states_df.html","id":"vanilla-block-property-type-list","dir":"Reference","previous_headings":"","what":"vanilla_block_property_type_list","title":"Bedrock block data — vanilla_block_states_df","text":"List properties (names) types (values).","code":""},{"path":"https://reedacartwright.github.io/rbedrock/reference/vanilla_block_states_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bedrock block data — vanilla_block_states_df","text":"https://github.com/gentlegiantJGC/PyMCTranslate/","code":""},{"path":[]},{"path":"https://reedacartwright.github.io/rbedrock/news/index.html","id":"rbedrock-033","dir":"Changelog","previous_headings":"","what":"RBedrock 0.3.3","title":"RBedrock 0.3.3","text":"CRAN release: 2025-03-25 Fix notes identified CRAN. (Unused calls stderr abort.) Update included leveldb library.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/news/index.html","id":"rbedrock-032","dir":"Changelog","previous_headings":"","what":"RBedrock 0.3.2","title":"RBedrock 0.3.2","text":"CRAN release: 2023-12-01 Fixed errors usage Rf_error(). Use R_len_t locations.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/news/index.html","id":"rbedrock-031","dir":"Changelog","previous_headings":"","what":"RBedrock 0.3.1","title":"RBedrock 0.3.1","text":"CRAN release: 2023-10-06 Remove hardcoded C++17 requirement calling CMake.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/news/index.html","id":"rbedrock-030","dir":"Changelog","previous_headings":"","what":"RBedrock 0.3.0","title":"RBedrock 0.3.0","text":"CRAN release: 2023-03-20 Added support reading writing 1.18.30+ actor digests. Chunk data functions expanded. [Breaking Change] Biome functions now return CNC biomes data (CnC biome functions renamed.) Accessing legacy biome data can done legacy biome functions. [Breaking Change] Chunk data functions files renamed match internal Mojang names. [Breaking Change] Chunk data functions longer default reading keys db keys present. [Breaking Change] Chunk tag key descriptions changed better match internal Mojang descriptions. Maximum chunk key tag increased 96. [Breaking Change] Change key format require prefixes front every key. allows rbedrock support multiple key formats. Add nbt_raw_string support reading writing nbt_string data contains embedded nulls. Change default parameters bedrockdb match Minecraft. reduces size worlds modified rbedrock. Generate random world seeds using 64-bits. [Fix] Generate default package options loading rbedrock. fixes users able find world directory Window. Create 1.19+ worlds default using create_world() Add functions reading writing actors data chunk. Add utility functions working unique ids.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/news/index.html","id":"rbedrock-020","dir":"Changelog","previous_headings":"","what":"RBedrock 0.2.0","title":"RBedrock 0.2.0","text":"CRAN release: 2022-03-10 Support subchunk version 9 introduced Caves Cliffs. Support Caves Cliffs’ 3DMaps. Change tag format @x:z:d:t:s. change made subtags can now negative. Add locate_blocks() function. Introduce intermediate rnbt (raw nbt) format. Introduce new NBT API based S3 classes. Remove layer simplify arguments get_subchunk_layers_value() friends. Improved ChunkVersion API Remove -Werror flag used leveldb platforms Added 1.18 example world Add support 1.18’s empty palettes. Rename chunk tag match internal bedrock names. Add starts_with option get_values(), db$mget_prefix() bedrock_leveldb_mget_prefix() function. Add get_subchunk_blocks_from_chunk() function efficiently lead subchunks single chunk. Add utility functions calculating spawning area simulation area.","code":""},{"path":"https://reedacartwright.github.io/rbedrock/news/index.html","id":"rbedrock-011","dir":"Changelog","previous_headings":"","what":"RBedrock 0.1.1","title":"RBedrock 0.1.1","text":"CRAN release: 2021-09-11 Fixed errors identified UBSAN Valgrind Improved detection cmake binary. RBedrock can now compiled Solaris using GCC. RBedrock can now compiled CRAN’s MacOS builder. Updated README.md","code":""},{"path":"https://reedacartwright.github.io/rbedrock/news/index.html","id":"rbedrock-010","dir":"Changelog","previous_headings":"","what":"RBedrock 0.1.0","title":"RBedrock 0.1.0","text":"CRAN release: 2021-07-14 Initial Release","code":""}]
